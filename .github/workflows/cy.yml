name: CI - HealthTrack Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del cÃ³digo
        uses: actions/checkout@v3

      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # âœ… Instalar Google Chrome desde repositorio oficial
      - name: Instalar Google Chrome
        run: |
          sudo apt update
          sudo apt install -y wget unzip gnupg
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /etc/apt/keyrings/google-chrome.gpg
          echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt update
          sudo apt install -y google-chrome-stable

      # âœ… Instalar ChromeDriver que coincida con la versiÃ³n de Chrome
      - name: Instalar ChromeDriver compatible
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -1)
          MAJOR_VERSION=$(echo "$CHROME_VERSION" | cut -d '.' -f 1)
          DRIVER_VERSION=$(curl -sS "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_${MAJOR_VERSION}")
          DRIVER_URL="https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${DRIVER_VERSION}/linux64/chromedriver-linux64.zip"

          echo "Instalando ChromeDriver ${DRIVER_VERSION} para Chrome ${CHROME_VERSION}"
          wget -O chromedriver.zip "$DRIVER_URL"
          unzip chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      # ðŸ”§ Ejecutar pruebas (unitarias + funcionales)
      - name: Compilar y ejecutar pruebas
        run: mvn clean test

      # ðŸ“Š Generar reporte de cobertura (opcional)
      - name: Generar reporte de cobertura
        run: mvn verify